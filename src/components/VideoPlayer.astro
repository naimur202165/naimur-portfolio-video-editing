---
interface Props {
  videoUrl: string;
  title: string;
}

const { videoUrl, title } = Astro.props;

// Extract video ID from YouTube URL, including Shorts
const getYouTubeId = (url: string) => {
  const regExp = /^.*((youtu.be\/)|(v\/)|(\/u\/\w\/)|(embed\/)|(watch\?v=)|(shorts\/))([^#&?]*).*/;
  const match = url.match(regExp);
  return match && match[8].length > 0 ? match[8] : null;
};

const videoId = getYouTubeId(videoUrl);
---

<div class="video-wrapper">
  {videoId ? (
    <iframe
      src={`https://www.youtube.com/embed/${videoId}?rel=0&modestbranding=1&showinfo=0`}
      title={title}
      allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"
      allowfullscreen
      loading="lazy"
    ></iframe>
  ) : (
    <div class="error-message">Invalid YouTube URL</div>
  )}
</div>

<style>
  .video-wrapper {
    position: relative;
    padding-bottom: 56.25%; /* 16:9 Aspect Ratio */
    height: 0;
    overflow: hidden;
    border-radius: 0.75rem;
    background: var(--gray-999);
    box-shadow: var(--shadow-sm);
  }

  iframe {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    border: none;
    border-radius: 0.75rem;
  }

  .error-message {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    color: var(--gray-300);
    font-size: var(--text-lg);
  }
</style>
